#!/usr/bin/env bash
#set -e
#Осуществляем запуск Cryptopro
service cprocsp start

if [ -f /tmp/ready ]; then cat /tmp/iru-hosts >> /etc/hosts
else
#Указываем место нахождения libcurl
/opt/cprocsp/sbin/amd64/cpconfig -ini \\config\\apppath -add string libcurl.so /usr/lib64/libcurl.so

#Сбрасываем пароль для контейнера, если он был установлен
#/opt/cprocsp/bin/amd64/csptest -passwd -container '\\.\HDIMAGE\test_container' -change '' -passwd 'old_password'

#Выгружаем сертификат из контейнера
#/opt/cprocsp/bin/amd64/certmgr -export -store uMy -dest /tmp/nginx.cer

#Загружаем сертификат в контейнер
cd /etc/pki/tls/certs && /opt/cprocsp/bin/amd64/certmgr -inst -file {{ item.value.gost_cert }} -cont '\\.\HDIMAGE\{{ item.value.gost_container }}'

#Устанавливаем КС2
yum install -y /tmp/lsb-cprocsp-kc2-64-4.0.0-4.x86_64.rpm

#Линкуем только что загруженный сертификат как КС2
/opt/cprocsp/bin/amd64/certmgr -inst -store uMy -cont '\\.\HDIMAGE\{{ item.value.gost_container }}' -provtype 75 -provname "Crypto-Pro GOST R 34.10-2001 KC2 CSP"

#Переконвертируем сертификат из X509/DER в X.509/PEM
cd /etc/pki/tls/certs &&  /opt/cprocsp/cp-openssl/bin/amd64/openssl x509 -inform der -in {{ item.value.gost_cert }} -out {{ item.value.gost_cert_pem }}

#Редактируем nginx.conf
#sed -i "s/user  nginx;/user  root;/" /etc/nginx/nginx.conf

#Подчищаем
#rm -rf /tmp/nginx.cer /tmp/nginx.pem

[ ! -z ${ADMIN_LAB} ] && sed -i "s/backend_servers admin-lab/backend_servers ${ADMIN_LAB}/g" /etc/nginx/conf.d/admin-lab.infoclinica.ru.conf
[ ! -z ${ADMIN_WEB} ] && sed -i "s/backend_servers admin-web/backend_servers ${ADMIN_WEB}/g" /etc/nginx/conf.d/admin-web.infoclinica.ru.conf
[ ! -z ${NODE_LAB} ] && sed -i "s/backend_servers node-lab/backend_servers ${NODE_LAB}/g" /etc/nginx/conf.d/labportal.infoclinica.ru.conf
[ ! -z ${NODE_WEB} ] && sed -i "s/backend_servers node-web/backend_servers ${NODE_WEB}/g" /etc/nginx/conf.d/web.infoclinica.ru.conf

# Дописываем имена в /etc/hosts

cat /tmp/iru-hosts >> /etc/hosts

touch /tmp/ready
fi

# Включаем destination в логирование. см. Redmine 99040

sed -i "s/\$remote_addr/\$proxy_protocol_addr - \"\$host\" \$remote_addr/" /etc/nginx/nginx.conf

# Отключаем логи со статусом 200 и 300. см. Redmine 99946

if [ ! -z ${DEBUG} ] && [ ${DEBUG} == "false" ]
then
  sed -i "/log_format  main/i    map $status $loggable {\n    ~^[23]  0;\n    default 1;\n    }" /etc/nginx/nginx.conf
  sed -i "s/access_log  \/var\/log\/nginx\/access.log  main;/access_log  \/var\/log\/nginx\/access.log  main if=\$loggable;/" /etc/nginx/nginx.conf
fi

if [ ! -z ${COMPRESS} ] && [ ${COMPRESS} == "true" ]
then
cat << EOF >> /etc/nginx/conf.d/00-default.conf
gzip on;
gzip_comp_level 2;
gzip_http_version 1.0;
gzip_proxied any;
gzip_min_length 1100;
gzip_buffers 16 8k;
gzip_types text/plain application/x-javascript text/xml text/css application/xml application/javascript text/javascript;
gzip_vary on;
EOF
fi

exec "$@"
